<?xml version="1.0"?>
<mx:UIComponent xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                creationComplete="onCreationComplete(event)">
    <fx:Script><![CDATA[
        import events.GameEvent;

        import global.Color;

        import logic.Entity;

        import logic.GameData;
        import logic.PlayerController;

        import logic.Signal;

        import mx.events.FlexEvent;

        import nape.geom.Vec2;
        import nape.phys.Body;
        import nape.phys.BodyType;
        import nape.shape.Circle;
        import nape.shape.Polygon;
        import nape.space.Space;
        import nape.util.BitmapDebug;

        private var space:Space;
        private var debug:BitmapDebug;


        private var prevTimeMS:int;
        private var simulationTime:Number;

        private var bodies:Object = {};

        private var playerBody:Body;
        private var playerController:PlayerController;

        private function onCreationComplete(event:FlexEvent):void
        {
            // Signals
            Signal.instance.addEventListener(GameEvent.GAME_STATE_UPDATE, onGameStateUpdate);

            addEventListener(Event.ENTER_FRAME, onEnterFrame);

            space = new Space(new Vec2(0, 600));

            debug = new BitmapDebug(width, height, Color.black, true);
            addChild(debug.display);

            var w:uint = 900;//stage.stageWidth;
            var h:uint = 600;//stage.stageHeight;

            // Create a static border around stage.
            var border:Body = new Body(BodyType.STATIC);
            border.shapes.add(new Polygon(Polygon.rect(0, 0, w, -1)));
            border.shapes.add(new Polygon(Polygon.rect(0, h, w, 1)));
            border.shapes.add(new Polygon(Polygon.rect(0, 0, -1, h)));
            border.shapes.add(new Polygon(Polygon.rect(w, 0, 1, h)));
            border.space = space;

            // Generate some random objects!
            for (var i:uint = 0; i < 100; i++) {
                var body:Body = new Body();

                // Add random one of either a Circle, Box or Pentagon.
                if (Math.random() < 0.33) {
                    body.shapes.add(new Circle(20));

                } else if (Math.random() < 0.5) {
                    body.shapes.add(new Polygon(Polygon.box(40, 40)));
                } else {
                    body.shapes.add(new Polygon(Polygon.regular(20, 20, 5)));
                }

                // Set to random position on stage and add to Space.
                body.position.setxy(Math.random() * w, Math.random() * h);
                body.space = space;
            }

            //Add the player body
            playerBody = new Body();
            playerBody.shapes.add(new Circle(35));
            playerBody.position.setxy(Math.random() * w, Math.random() * h);
            playerBody.space = space;

            // Set up fixed time step logic.
            prevTimeMS = getTimer();
            simulationTime = 0.0;
            playerController = new PlayerController(playerBody, space, this);
        }

        private function onEnterFrame(event:Event):void
        {
            space.step(1 / stage.frameRate);

            debug.clear();
            debug.draw(space);
            debug.flush();
        }

        private function onGameStateUpdate(event:GameEvent):void
        {
            trace("######## GAME STATE UDPATE ########");

            // Remove entities that need to be removed
            for each (var body:Body in bodies)
            {
                var contained:Boolean = false;
                for each (var t:Entity in GameData.instance.entities)
                {
                    if (t.body == body)
                    {
                        contained = true;
                        break;
                    }
                }

                if (!contained)
                    body.space = null;
            }

            // Add or Update entities
            for each (var t:Entity in GameData.instance.entities)
            {
                trace(JSON.stringify(t.toUntyped()));

                if (bodies[t.id])
                {
                    // Update existing element
                } else
                {
                    // Create new element
                    var body:Body = t.body;
                    body.shapes.add(new Polygon(Polygon.rect(0, 0, 25, 25)));
                    body.space = space;
                }
            }
        }
        ]]></fx:Script>
</mx:UIComponent>
